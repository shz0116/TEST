name: TESTCI

on:
  push:     
    branches:
      - master 
  pull_request:
    branches:
      - master
  
jobs:
  build1:

    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [ubuntu-latest] ## [ubuntu-latest, windows-latest, macos-latest] 

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Get env vars on Linux or Macos
      run: |
        echo GITHUB_WORKFLOW   = ${env::GITHUB_WORKFLOW}
        echo GITHUB_WORKFLOW   = ${env:GITHUB_WORKFLOW}
        echo GITHUB_WORKFLOW   = $env::GITHUB_WORKFLOW
        echo GITHUB_WORKFLOW   = $env:GITHUB_WORKFLOW
        echo HOME              = $HOME
        echo GITHUB_ACTION     = $GITHUB_ACTION
        echo GITHUB_ACTIONS    = $GITHUB_ACTIONS
        echo GITHUB_REPOSITORY = $GITHUB_REPOSITORY
        echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME
        echo GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH
        echo GITHUB_WORKSPACE  = $GITHUB_WORKSPACE
        echo GITHUB_SHA        = $GITHUB_SHA
        echo GITHUB_REF        = $GITHUB_REF
        cat /proc/meminfo

    - name: Build static test
      env:
        RUNOS: ${{ runner.os }}
      if: runner.os == 'linux' || runner.os == 'macos'
      shell: bash
      run: |
        set -e
        c++ --version               
        mkdir build_static
        cd build_static
        cmake ..
        make
        echo "THIS IS ON : " $RUNOS

    - name: Get SDE
      run: |
        which wget
        which git
        git clone https://github.com/marehr/intel-sde-downloader.git
        ls
        pip install -r intel-sde-downloader/requirements.txt
        python intel-sde-downloader/intel-sde-downloader.py sde-external-8.49.0-2020-03-17-mac.tar.bz2
        ls
        tar -xvf sde-external-8.49.0-2020-03-17-mac.tar.bz2
        echo "==========files==========="
        ls sde-external-8.49.0-2020-03-17-mac
        echo "==========hello==========="
        sde-external-8.49.0-2020-03-17-mac/sde64 -- build_static/Hello
        echo "SHOULD HAVE SDE"
        which ctest

        for n in 1 2 3 4
        do 
          timeout 10s sde-external-8.49.0-2020-03-17-mac/sde64 -- build_static/Hello
          echo "SDE : $n  $?"
        done

    - name: Test
##      if: contains(runner.os,'Linux')
      run: |
        echo GITHUB_WORKFLOW is $GITHUB_WORKFLOW
        echo HOME $HOME
        echo GITHUB_ACTION $GITHUB_ACTION
        echo GITHUB_ACTIONS $GITHUB_ACTIONS
        echo GITHUB_REPOSITORY $GITHUB_REPOSITORY
        echo GITHUB_EVENT_NAME $GITHUB_EVENT_NAME
        echo GITHUB_EVENT_PATH $GITHUB_EVENT_PATH
        echo GITHUB_WORKSPACE  $GITHUB_WORKSPACE
        echo GITHUB_SHA        $GITHUB_SHA
        echo GITHUB_REF        $GITHUB_REF
        echo "--------"
        build_static/Hello
        echo GITHUB_WORKFLOW is $GITHUB_WORKFLOW
        echo "LINUX AGAIN" {{ runner.os }}


